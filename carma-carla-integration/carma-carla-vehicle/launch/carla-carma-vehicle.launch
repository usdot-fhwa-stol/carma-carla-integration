<!--
 Copyright (c) 2018-2019 Intel Corporation
Modified by Leidos 2022

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN 
-->
<launch>
  <arg name='host' default='localhost'/>
  <arg name='port' default='2000'/>
  <arg name='timeout' default='10'/>

<!-- Directory of vehicle config parameters -->
  <arg name="vehicle_config_dir" default="/opt/carma/vehicle/config" doc="The directory continaing vehicle config type parameters"/>
  <arg name="vehicle_calibration_dir" default="/opt/carma/vehicle/calibration" doc="The directory continaing vehicle calibration type parameters"/>
 
 <!--Load Vehicle Characteristics -->
  <rosparam command="load" file="$(arg vehicle_calibration_dir)/identifiers/UniqueVehicleParams.yaml"/>
  <rosparam command="load" file="$(arg vehicle_config_dir)/VehicleConfigParams.yaml"/>


  <remap from="vehicle_model" to="/vehicle_model"/>

  <arg name="vehicle_filter" value='$(arg vehicle_model)' />
  <arg name="role_name" default="virtual_vehicle"/>
  <!-- use comma separated format "x,y,z,roll,pitch,yaw" -->
  <arg name="spawn_point" default=""/>
  <arg name="remap_rviz_initialpose_goal" default="True"/>
  <arg name="spawn_virtual_vehicle" default="True" />
  <arg name="sensor_definition_file" value='$(find carla_carma_agent)/agent/config/sensors.json'/>

  <param name="/carla/host" value="$(arg host)" />
  <param name="/carla/port" value="$(arg port)" />
  <param name="/carla/timeout" value="$(arg timeout)" />

  <!-- 
    If enabled, remap topics to support setting initialpose and goal with RVIZ

    This does not work for multiple ego-vehicles.
  -->
  <group if="$(eval remap_rviz_initialpose_goal)">
    <node pkg="topic_tools" type="relay" name="goal_relay_$(arg role_name)" args="/move_base_simple/goal /carla/$(arg role_name)/goal"/>
    <node pkg="topic_tools" type="relay" name="initialpose_relay_$(arg role_name)" args="/initialpose /carla/$(arg role_name)/initialpose"/>
  </group>

  <node pkg="carla-carma-vehicle" type="carla-carma-vehicle.py" name="carla-carma-vehicle_$(arg role_name)" output="screen">
    <param name="sensor_definition_file" value="$(arg sensor_definition_file)" />
    <param name="vehicle_filter" value="$(arg vehicle_filter)" />
    <param name="spawn_point" value="$(arg spawn_point)" />
    <param name="role_name" value="$(arg role_name)" />
    <param name="spawn_virtual_vehicle" value="$(arg spawn_virtual_vehicle)" />
  </node>
</launch>